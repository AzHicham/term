set -g default-terminal "screen-256color"
set -g xterm-keys on

set-option -g default-shell /usr/bin/zsh

# ==========
# change default prefix (C-b) to C-space
# ==========
unbind C-space
set -g prefix C-space
bind C-space send-prefix

# start numbering from 0 instead of 1
set -g base-index 0
setw -g pane-base-index 0

# bind C-a to last active window
bind-key C-a last-window

# next previous window
bind-key -n F8 previous-window
bind-key -n F9 next-window
bind -n C-p previous-window
bind -n C-n next-window
#bind-key -n M-Left previous-window
#bind-key -n M-Right next-window

# bind C-c to clear history
bind-key C-b send-keys "clear && tmux clear-history" \; send-keys "Enter"

# save history in tmux.history file
bind-key C-s command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# get rid of delay reading command characters while tmux waits for escape sequence
set -s escape-time 1

# reload ~/.tmux.conf using prefix r
bind r source-file ~/.tmux.conf \; display "tmux reloaded"

# change split prefixes (horizontal: C-space /) (vertical: C-space -)
bind / split-window -h
bind - split-window -v

# zoom
bind -n C-z resize-pane -Z

# make current window the 1st window
bind T swap-window -t 1

# set scrollback history to 50K lines
set -g history-limit 99999

# ==========
# mouse support
# ==========
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M; send-keys -M; send-keys -M; send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"
bind -n WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M; send-keys -M; send-keys -M; send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"

# ==========
# Enable locking
# ==========
set -g lock-command vlock
set -g lock-after-time 0 # Seconds 0 = never
bind L lock-session

# ==========
# Movement
# ==========
# map vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# move windows +/-1
bind-key -n S-Left swap-window -t -1
bind-key -n S-Right swap-window -t +1

# pane resizing - hold ALT + arrows
bind-key -nr M-Up resize-pane -U
bind-key -nr M-Down resize-pane -D
bind-key -nr M-Left resize-pane -L
bind-key -nr M-Right resize-pane -R

# bind C-c to clear history
# use vi left and right to cycle thru panes
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind-key -nr S-Left select-pane -L
bind-key -nr S-Down select-pane -D
bind-key -nr S-Up select-pane -U
bind-key -nr S-Right select-pane -R

# Smart pane switching with awareness of Vim splits.
 # See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-C-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-C-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-C-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-C-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi M-C-Left select-pane -L
bind-key -T copy-mode-vi M-C-Down select-pane -D
bind-key -T copy-mode-vi M-C-Up select-pane -U
bind-key -T copy-mode-vi M-C-Right select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

# ==========
# copy mode
# ==========

setw -g mode-keys vi
set -g status-keys vi

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft{mouse} '#{alternate_on}' "send-keys -M" "copy-mode -t{mouse}; send-keys -t{mouse} -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# setup 'v' to begin selection as in vim
# New 2.4 version:
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down<Paste>

# update default binding of `Enter` to also use copy-pipe (os x)
bind-key -T copy-mode 'Enter' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# bind ] to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

bind-key C-v copy-mode
bind-key C-p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# ==========
# pluging
# ==========

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

run-shell ~/.tmux/tmux-open/open.tmux
run-shell ~/.tmux/tmux-fpp/fpp.tmux

# ==========
# status bar
# ==========

# set status bar
set -g status-interval 2
set -g status-justify left
set -g status-left ""
set -g status-right "#[fg=green]#H"

# light theme
set -g status-bg "#303030"
set -g status-fg "#009000"

# Status right
set -g status-left-length 40
set-option -g status-left '#[fg=blue] <#H> #[fg=green]'

set -g status-right-length 400
set -g status-right "| #[fg=green]%I:%M #[fg=aqua]%m.%d.%Y #[fg=green]#(/home/hicham/.tmux/plugins/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --powerline-right --interval 2)#[default]"

set-option -g set-titles on

#setw -g window-status-current-fg "#239F3A"
#setw -g window-status-current-bg "#505252"
#setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg="black"]#W#[fg=red]#F '

#setw -g window-status-fg "#818181"
#setw -g window-status-attr bold
setw -g window-status-format ' #I#[fg=colour249]:#[fg="#818181"]#W#[fg="#818181"]#F '

# quiet!
# http://unix.stackexchange.com/questions/169992/why-are-my-windows-highlighted-when-i-first-open-tmux
setw -g monitor-activity off
set -g monitor-silence 0
set -g bell-action none

set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none


run '~/.tmux/plugins/tpm/tpm'
